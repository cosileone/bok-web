/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/uIOayrP9r1W
 */
import { Badge } from "~/components/ui/badge";
import { CardHeader, CardContent, Card } from "~/components/ui/card";
import { RadioGroupItem, RadioGroup } from "~/components/ui/radio-group";
import { Label } from "~/components/ui/label";
import { Button } from "~/components/ui/button";
import { type Question } from "~/app/onboarding/quiz/questionsConfig";
import Link from "next/link";
import { useEffect, useState } from "react";
import useUserStore from "~/state/useUserStore";
import { getQuizAnswer } from "~/server/actions/quizAnswers";

type QuizStepProps = {
  question: Question;
  page: number;
  totalPages: number;
  onBack?: () => void;
  onNext: (value: { answer: string; score: number }) => void;
};
export function QuizStep({
  question,
  page,
  totalPages,
  onNext,
  onBack,
}: QuizStepProps) {
  const isLastPage = page === totalPages;
  const [answer, setAnswer] = useState<string>();
  const user = useUserStore((state) => state.user);

  useEffect(() => {
    if (!user) return;
    void getQuizAnswer({
      userId: user.id,
      question: page,
    }).then((answer) => {
      if (answer) {
        setAnswer(answer.answer);
      }
    });
  }, [page]);

  return (
    <Card className="w-full max-w-lg">
      <CardHeader className="flex items-center space-x-4">
        <h2 className="text-lg font-bold">Quiz</h2>
        <Badge>
          {page} of {totalPages}
        </Badge>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="space-y-2">
          <p className="text-sm font-medium">{question.question}</p>
          <RadioGroup
            aria-labelledby={`q${page}`}
            value={answer?.toString() ?? ""}
            onValueChange={(value) => setAnswer(value)}
          >
            <h3 className="sr-only" id={`q${page}`}>
              {question.question}
            </h3>
            <div className="space-y-2">
              {question.options.map((option) => (
                <Label
                  key={option.id}
                  className="flex items-center space-x-2"
                  htmlFor={`q${page}-${option.id}`}
                >
                  <RadioGroupItem
                    id={`q${page}-${option.id}`}
                    value={`${option.id}`}
                    onClick={() => setAnswer(option.id)}
                  />
                  <span>
                    {option.id}) {option.label}
                  </span>
                </Label>
              ))}
            </div>
          </RadioGroup>
        </div>
        <div className="flex justify-between space-x-2">
          {onBack ? (
            <Button
              className="w-20"
              variant="outline"
              onClick={() => onBack?.()}
            >
              Back
            </Button>
          ) : null}
          {/*<Link href={ctaUrl}>*/}
          <Button
            size="sm"
            onClick={() => {
              if (answer === undefined) return;
              onNext({
                answer,
                score: question.options.find((o) => o.id === answer)!.value,
              });
              setAnswer(undefined);
            }}
            disabled={answer === undefined}
            className={"ml-auto"}
          >
            {isLastPage ? "Finish" : "Next"}
          </Button>
          {/*</Link>*/}
        </div>
      </CardContent>
    </Card>
  );
}
